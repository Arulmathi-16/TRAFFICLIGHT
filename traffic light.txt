#include <xc.h>
#define _XTAL_FREQ 6000000


// NORTH
#define N_GREEN RD3
#define N_YELLOW RD4
#define N_RED RD5

// EAST
#define E_GREEN RC0
#define E_YELLOW RC1
#define E_RED RC2

// SOUTH
#define S_GREEN RD0
#define S_YELLOW RD1
#define S_RED RD2

// WEST
#define W_GREEN RC3
#define W_YELLOW RC4
#define W_RED RC5

// Buttons on PORTB (assumed active low)

#define EMR_WEST RB0
#define EMR_NORTH RB1
#define EMR_EAST RB2
#define EMR_SOUTH RB3



void normal_north() {
    
    N_GREEN = 1;
    E_YELLOW = 1;
    S_RED = 1;
    W_RED = 1;
}

void normal_east() {
    
    N_RED = 1;
    E_GREEN = 1;
    S_YELLOW = 1;
    W_RED = 1;
}

void normal_south() {
   
    N_RED = 1;
    E_RED = 1;
    S_GREEN = 1;
    W_YELLOW = 1;
}

void normal_west() {
    
    N_YELLOW = 1;
    E_RED = 1;
    S_RED = 1;
    W_GREEN = 1;
}

void emergency_north() {
    
    N_GREEN = 1;
    E_RED = 1;
    S_RED = 1;
    W_RED = 1;
}

void emergency_east() {
    
    E_GREEN = 1;
    N_RED = 1;
    S_RED = 1;
    W_RED = 1;
}

void emergency_south() {
    
    S_GREEN = 1;
    E_RED = 1;
    W_RED = 1;
    N_RED = 1;
}

void emergency_west() {
    
    W_GREEN = 1;
    N_RED = 1;
    S_RED = 1;
    E_RED = 1;
}

void main() {
    // Configure ports directions
    TRISC = 0x00;  // PORTC output (LEDs)
    PORTC = 0x00;  // Clear PORTC
    TRISD = 0x00;  // PORTD output (LEDs)
    PORTD = 0x00;  // Clear PORTD

    TRISB = 0xFF;  // PORTB input (buttons)
    PORTB = 0xFF;  // Enable pull-ups if available

  

    while(1) {
    // Emergency
    if(!EMR_NORTH) {
        do { 
        emergency_north();
        __delay_ms(200); 
        } 
        while(!EMR_NORTH);
        continue;
    }
    else if(!EMR_EAST) {
        do { 
            emergency_east();
            __delay_ms(200);
        } 
        while(!EMR_EAST);
        continue;
    }
    else if(!EMR_SOUTH) {
        do { 
            emergency_south();
            __delay_ms(200); 
        } while(!EMR_SOUTH);
        continue;
    }
    else if(!EMR_WEST) {
        do {
          emergency_west();
        __delay_ms(200);
        } while(!EMR_WEST);
        continue;
    }
    // Normal cycle 
    for(int i=0; i<100; i++) { 
        normal_north();
        __delay_ms(50);
        if(!EMR_NORTH || !EMR_EAST || !EMR_SOUTH || !EMR_WEST) 
            break;
    }
    for(int i=0; i<100; i++) {
        normal_east();
        __delay_ms(50);
        if(!EMR_NORTH || !EMR_EAST || !EMR_SOUTH || !EMR_WEST)
            break;
    }
    for(int i=0; i<100; i++) {
        normal_south();
        __delay_ms(50);
        if(!EMR_NORTH || !EMR_EAST || !EMR_SOUTH || !EMR_WEST)
            break;
    }
    for(int i=0; i<100; i++) {
        normal_west();
        __delay_ms(50);
        if(!EMR_NORTH || !EMR_EAST || !EMR_SOUTH || !EMR_WEST)
            break;
    }
}
}